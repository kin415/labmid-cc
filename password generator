using System;
using System.Text;
using System.Text.RegularExpressions;
using System.Windows.Forms;

namespace PasswordGeneratorApp
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void btnGeneratePassword_Click(object sender, EventArgs e)
        {
            string movieName = "JurassicPark";  // Complete movie name
            string password = GeneratePassword(movieName);
            txtPassword.Text = password;
        }

        private string GeneratePassword(string movieName)
        {
            string registrationNumberDigits = "28";  // Example digits from registration number
            string secondLetterFirstName = "i";      // Second letter of your first name
            string secondLetterLastName = "o";       // Second letter of your last name
            string specialCharacters = "!@$%^&*";    // Allowable special characters
            
            Random random = new Random();
            StringBuilder passwordBuilder = new StringBuilder();

            // Append required components
            passwordBuilder.Append(registrationNumberDigits);
            passwordBuilder.Append(secondLetterFirstName);
            passwordBuilder.Append(secondLetterLastName);

            // Select 2 random characters from the movie name
            for (int i = 0; i < 2; i++)
            {
                char randomMovieChar = movieName[random.Next(movieName.Length)];
                passwordBuilder.Append(randomMovieChar);
            }
            
            // Add random special characters excluding '#'
            for (int i = 0; i < 2; i++)
                passwordBuilder.Append(specialCharacters[random.Next(specialCharacters.Length)]);

            // Add random characters to complete the password length of 14
            string allChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789" + specialCharacters;
            while (passwordBuilder.Length < 14)
                passwordBuilder.Append(allChars[random.Next(allChars.Length)]);
            
            // Shuffle the password for randomness
            char[] passwordArray = passwordBuilder.ToString().ToCharArray();
            Array.Sort(passwordArray, (a, b) => random.Next(-1, 2));
            
            string password = new string(passwordArray);
            
            // Regex to validate password meets criteria
            string pattern = @"^(?!.*#).{14}$";
            if (Regex.IsMatch(password, pattern))
                return password;
            else
                return GeneratePassword(movieName); // Retry if regex doesn't match
        }
    }
}
